[
    {
      "previousVersion": "136.0.7064.0",
      "newVersion": "136.0.7067.0",
      "error": "../../electron/shell/common/gin_converters/content_converter.cc:155:11: error: enumeration value 'LOCAL_NETWORK_ACCESS' not handled in switch [-Werror,-Wswitch]\n  155 |   switch (val) {\n      |           ^~~\n1 error generated.\n\n",
      "cl": "https://chromium-review.googlesource.com/c/chromium/src/+/6325710"
    },
    {
      "previousVersion": "136.0.7064.0",
      "newVersion": "136.0.7067.0",
      "error": "../../electron/shell/browser/native_window_views.cc:1224:22: error: no member named 'get_color' in 'views::Background'\n 1224 |   return background->get_color();\n      |          ~~~~~~~~~~  ^\n1 error generated.\n",
      "cl": "https://chromium-review.googlesource.com/c/chromium/src/+/6331510"
    },
    {
      "previousVersion": "136.0.7064.0",
      "newVersion": "136.0.7067.0",
      "error": "../../electron/shell/browser/extensions/electron_extension_loader.cc:98:25: error: no member named 'SetDelegate' in 'extensions::ExtensionRegistrar'\n   98 |   extension_registrar_->SetDelegate(this);\n      |   ~~~~~~~~~~~~~~~~~~~~~~^\n1 error generated.",
      "cl": "https://chromium-review.googlesource.com/c/chromium/src/+/6349218"
    },
    {
      "previousVersion": "136.0.7087.0",
      "newVersion": "136.0.7095.0",
      "error": "../../electron/shell/common/api/electron_api_url_loader.h:51:7: error: abstract class is marked 'final' [-Werror,-Wabstract-final-class]\n   51 | class SimpleURLLoaderWrapper final\n      |       ^\ngen/services/network/public/mojom/url_loader_network_service_observer.mojom.h:317:16: note: unimplemented pure virtual method 'OnLocalNetworkAccessPermissionRequired' in 'SimpleURLLoaderWrapper'\n  317 |   virtual void OnLocalNetworkAccessPermissionRequired(OnLocalNetworkAccessPermissionRequiredCallback callback) = 0;\n      |                ^\n1 error generated.\n\n",
      "cl": "https://chromium-review.googlesource.com/c/chromium/src/+/6337340"
    },
    {
      "previousVersion": "136.0.7067.0",
      "newVersion": "136.0.7095.0",
      "error": "../../electron/shell/browser/api/electron_api_cookies.cc:255:7: error: static assertion failed due to requirement 'Reasons.size() == net::CookieInclusionStatus::EnumSet<net::CookieInclusionStatus::ExclusionReason, net::CookieInclusionStatus::ExclusionReason::EXCLUDE_UNKNOWN_ERROR, net::CookieInclusionStatus::ExclusionReason::EXCLUDE_ANONYMOUS_CONTEXT>::kValueCount': Please ensure all ExclusionReason variants are enumerated in GetDebugString\n  255 |       Reasons.size() ==\n      |       ^~~~~~~~~~~~~~~~~\n  256 |           net::CookieInclusionStatus::ExclusionReasonBitset::kValueCount,\n      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../../electron/shell/browser/api/electron_api_cookies.cc:255:22: note: expression evaluates to '27 == 28'\n  255 |       Reasons.size() ==\n      |       ~~~~~~~~~~~~~~~^~\n  256 |           net::CookieInclusionStatus::ExclusionReasonBitset::kValueCount,\n      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n\n",
      "cl": "https://chromium-review.googlesource.com/c/chromium/src/+/6343479"
    },
    {
      "previousVersion": "136.0.7067.0",
      "newVersion": "136.0.7095.0",
      "error": "../../electron/shell/browser/net/system_network_context_manager.cc:274:78: error: too few arguments to function call, expected 5, have 4\n  272 |   content::GetNetworkService()->ConfigureStubHostResolver(\n      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  273 |       base::FeatureList::IsEnabled(net::features::kAsyncDns),\n  274 |       default_secure_dns_mode, doh_config, additional_dns_query_types_enabled);\n      |                                                                              ^\ngen/services/network/public/mojom/network_service.mojom.h:286:16: note: 'ConfigureStubHostResolver' declared here\n  286 |   virtual void ConfigureStubHostResolver(bool insecure_dns_client_enabled, bool happy_eyeballs_v3_enabled, ::net::SecureDnsMode secure_dns_mode, const ::net::DnsOverHttpsConfig& dns_over_https_config, bool additional_dns_types_enabled) = 0;\n      |                ^                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n\n",
      "cl": "https://chromium-review.googlesource.com/c/chromium/src/+/6381614"
    },
    {
      "previousVersion": "136.0.7067.0",
      "newVersion": "136.0.7095.0",
      "error": "../../electron/shell/browser/mac/electron_application.mm:196:47: error: no member named 'IsAccessibleBrowser' in 'content::BrowserAccessibilityState'\n  196 |     return [NSNumber numberWithBool:ax_state->IsAccessibleBrowser()];\n      |                                     ~~~~~~~~  ^\n../../electron/shell/browser/mac/electron_application.mm:212:17: error: no member named 'OnScreenReaderDetected' in 'content::BrowserAccessibilityState'\n  212 |       ax_state->OnScreenReaderDetected();\n      |       ~~~~~~~~  ^\n../../electron/shell/browser/mac/electron_application.mm:214:17: error: no member named 'DisableAccessibility' in 'content::BrowserAccessibilityState'\n  214 |       ax_state->DisableAccessibility();\n      |       ~~~~~~~~  ^\n3 errors generated.\n\n",
      "cl": "https://chromium-review.googlesource.com/c/chromium/src/+/6383275"
    },
    {
      "previousVersion": "136.0.7067.0",
      "newVersion": "136.0.7095.0",
      "error": "../../electron/shell/browser/extensions/api/scripting/scripting_api.cc:472:10: error: no matching function for call to 'CheckAndLoadFiles'\n  472 |     if (!CheckAndLoadFiles(\n      |          ^~~~~~~~~~~~~~~~~\n../../extensions/browser/scripting_utils.h:227:6: note: candidate function not viable: requires 6 arguments, but 5 were provided\n  227 | bool CheckAndLoadFiles(std::vector<std::string> files,\n      |      ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  228 |                        script_parsing::ContentScriptType resources_type,\n      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  229 |                        const Extension& extension,\n      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  230 |                        bool requires_localization,\n      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  231 |                        ResourcesLoadedCallback callback,\n      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  232 |                        std::string* error_out);\n      |                        ~~~~~~~~~~~~~~~~~~~~~~\n../../electron/shell/browser/extensions/api/scripting/scripting_api.cc:611:10: error: no matching function for call to 'CheckAndLoadFiles'\n  611 |     if (!CheckAndLoadFiles(\n      |          ^~~~~~~~~~~~~~~~~\n../../extensions/browser/scripting_utils.h:227:6: note: candidate function not viable: requires 6 arguments, but 5 were provided\n  227 | bool CheckAndLoadFiles(std::vector<std::string> files,\n      |      ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  228 |                        script_parsing::ContentScriptType resources_type,\n      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  229 |                        const Extension& extension,\n      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  230 |                        bool requires_localization,\n      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  231 |                        ResourcesLoadedCallback callback,\n      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  232 |                        std::string* error_out);\n      |                        ~~~~~~~~~~~~~~~~~~~~~~\n../../electron/shell/browser/extensions/api/scripting/scripting_api.cc:727:44: error: too few arguments to function call, expected 5, have 4\n  726 |     if (!scripting::GetFileResources(*injection.files, *extension(), &resources,\n      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  727 |                                      &error)) {\n      |                                            ^\n../../extensions/browser/scripting_utils.h:236:6: note: 'GetFileResources' declared here\n  236 | bool GetFileResources(const std::vector<std::string>& files,\n      |      ^                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  237 |                       script_parsing::ContentScriptType resources_type,\n      |                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  238 |                       const Extension& extension,\n      |                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  239 |                       std::vector<ExtensionResource>* resources_out,\n      |                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  240 |                       std::string* error_out);\n      |                       ~~~~~~~~~~~~~~~~~~~~~~\n\n",
      "cl": "https://chromium-review.googlesource.com/c/chromium/src/+/6298395"
    }
]
